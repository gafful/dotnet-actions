# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build solution
      run: dotnet build --no-restore
    - name: Test solution
      run: dotnet test --no-build --verbosity normal
    - name: Publish Konssole artifact for Linux x64 architecture
      run: dotnet publish --self-contained -c Release -r linux-x64 /p:PublishSingleFile=true konssole
    - name: Publish Konssole artifact for MacOS arm64 architecture
      run: dotnet publish --self-contained -c Release -r osx-arm64 /p:PublishSingleFile=true konssole
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Linux x64 release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: konssole/bin/Release/net7.0/linux-x64/publish/konssole
        asset_name: konssole-linux-x64.zip
        asset_content_type: application/zip
    - name: Upload MacOS arm64 release asset
      id: upload-osx-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: konssole/bin/Release/net7.0/osx-arm64/publish/konssole
        asset_name: konssole-osx-arm64.zip
        asset_content_type: application/zip
    - name: Deploy to droplet
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USER }}
        password: ${{ secrets.DROPLET_PASSWORD }}
        source: "konssole/bin/Release/net7.0/linux-x64/publish"
        target: "${{ secrets.DROPLET_TARGET_DIR }}"
